echo -e "[main]\ndns=dnsmasq" > /etc/NetworkManager/conf.d/nm-dns.conf
systemctl restart NetworkManager
sudo vi pull-secret
dnf -y update
lscpu | grep Virtualization: 
(Virtualization:      VT-x)

dnf -y install zip podman buildah skopeo libvirt*  bind-utils wget tar gcc python3-devel python3  xauth virt-install virt-viewer virt-manager libguestfs-tools-c libguestfs-tools tmux httpd-tools git x3270-x11 nc net-tools

dnf -y install qemu-kvm qemu-img bridge-utils libvirt libvirt-client virt-install  libguestfs-tools

systemctl start libvirtd.service
systemctl enable libvirtdgit clone https://github.com/kxr/ocp4_setup_upi_kvm.git
systemctl enable libvirtd

======
./expose_cluster.sh --method firewalld
-------
auto-start VMs on next reboot
---------
for vm in $(virsh list --all --name --no-autostart | grep "<CLUSTER-NAME>"); do
  virsh autostart ${vm}
done
==============
add node for ocs
==============
./add_node.sh --cpu 4 --memory 16000 --add-disk 50 --add-disk 100 --name storage-1
./add_node.sh --cpu 4 --memory 16000 --add-disk 50 --add-disk 100 --name storage-2
./add_node.sh --cpu 4 --memory 16000 --add-disk 50 --add-disk 100 --name storage-3
-----------------
wait for CSR
-----
while true; do
  for x in $(oc get csr | grep Pending | awk '{print $1}'); do
    oc adm certificate approve $x;
  done;
  sleep 5;
done
------
Label the new nodes
Load the env file of the cluster (we need $CLUSTER_NAME and $BASE_DOM)

source ./env
oc label node storage-1.${CLUSTER_NAME}.${BASE_DOM} cluster.ocs.openshift.io/openshift-storage=''
oc label node storage-2.${CLUSTER_NAME}.${BASE_DOM} cluster.ocs.openshift.io/openshift-storage=''
oc label node storage-3.${CLUSTER_NAME}.${BASE_DOM} cluster.ocs.openshift.io/openshift-storage=''
----------------------
Create Local Storage Operator
-----------------------
oc new-project local-storage
----
cat <<EOF | oc create -f -
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: local-storage-opg
  namespace: local-storage
spec:
  targetNamespaces:
  - local-storage
EOF
------
Create the Subscription 
-----
cat <<EOF | oc create -f -
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: local-storage-operator
  namespace: local-storage 
spec:
  channel: "4.4"
  name: local-storage-operator
  source: redhat-operators
  sourceNamespace: openshift-marketplace
EOF
----
watch oc get csv -n local-storage
------
Create Local Volumes
-------
cat <<EOF | oc create -f -
apiVersion: "local.storage.openshift.io/v1"
kind: "LocalVolume"
metadata:
  name: "local-disks-fs"
  namespace: "local-storage"
spec:
  nodeSelector:
    nodeSelectorTerms:
    - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - storage-1.${CLUSTER_NAME}.${BASE_DOM}
          - storage-2.${CLUSTER_NAME}.${BASE_DOM}
          - storage-3.${CLUSTER_NAME}.${BASE_DOM}
  storageClassDevices:
    - storageClassName: "lo-fs"
      volumeMode: Filesystem
      devicePaths:
        - /dev/vdb
EOF
-----------
Second disk on each node (vdc) will be used for Block type storage.
---------
cat <<EOF | oc create -f -
apiVersion: "local.storage.openshift.io/v1"
kind: "LocalVolume"
metadata:
  name: "local-disks"
  namespace: "local-storage"
spec:
  nodeSelector:
    nodeSelectorTerms:
    - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - storage-1.${CLUSTER_NAME}.${BASE_DOM}
          - storage-2.${CLUSTER_NAME}.${BASE_DOM}
          - storage-3.${CLUSTER_NAME}.${BASE_DOM}
  storageClassDevices:
    - storageClassName: "lo-blk"
      volumeMode: Block
      devicePaths:
        - /dev/vdc
EOF
------------------
watch oc get pods -n local-storage
oc get sc
------------------
Instal OCS Operator
--------------
cat <<EOF | oc create -f -
apiVersion: v1
kind: Namespace
metadata:
  labels:
    openshift.io/cluster-monitoring: "true"
  name: openshift-storage
spec: {}
EOF
-------------------
Add the OperatorGroup
-------------------
cat <<EOF | oc create -f -
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: openshift-storage-opg
  namespace: openshift-storage
spec:
  targetNamespaces:
  - openshift-storage
EOF
----------------------
Create the Subscription 
----------------------
cat <<EOF | oc create -f -
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: ocs-operator
  namespace: openshift-storage 
spec:
  channel: "stable-4.4"
  name: ocs-operator
  source: redhat-operators
  sourceNamespace: openshift-marketplace
EOF
--------------------------
watch oc get csv -n openshift-storage
--------------------
Create Storage Cluster
-----------------------
cat <<EOF | oc create -f -
apiVersion: ocs.openshift.io/v1
kind: StorageCluster
metadata:
  name: ocs-storagecluster
  namespace: openshift-storage
spec:
  manageNodes: false
  monPVCTemplate:
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
      storageClassName: 'lo-fs'
      volumeMode: Filesystem
  resources:      
    mon:      
      requests: {}
      limits: {}
    mds:
      requests: {}
      limits: {}
    rgw:      
      requests: {}
      limits: {}
    mgr:
      requests: {}
      limits: {}
    noobaa-core:      
      requests: {}
      limits: {}
    noobaa-db:        
      requests: {}
      limits: {}
  storageDeviceSets:
  - count: 1
    dataPVCTemplate:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
        storageClassName: 'lo-blk'
        volumeMode: Block
    name: ocs-deviceset
    placement: {}
    portable: true
    replica: 3
    resources:
      requests: {}
      limits: {}
EOF
---------------
watch oc get pods -n openshift-storage
--------------
oc get sc
